version: "3.5"
services:

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    command: node app.js
    image: camagru-backend
    container_name: backend
    volumes:
      - ./backend/:/camagru-backend:ro
    networks:
      camagru_network:
        aliases: [camagru.backend]
    # depends_on:
      # postgres: { condition: service_healthy }
    ports:
      - 3000:3000
    restart: on-failure

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    command: node app.js
    image: camagru-frontend
    container_name: frontend
    volumes:
      - ./frontend/:/camagru-frontend:ro
    ports:
      - 6300:6300
    networks:
      camagru_network:
        aliases: [camagru.frontend]
    restart: on-failure

  db:
    image: postgres:13.1
    container_name: db
    networks:
      camagru_network:
        aliases: [camagru-db]
    env_file:
      - ./backend/env/db.env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

networks:
  camagru_network:
    driver: bridge